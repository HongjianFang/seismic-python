#!/usr/bin/env python
from argparse import ArgumentParser
import os
from gazelle.datascope import Database
from seispy.util import MultiThreadProcess

def parse_args():
    parser = ArgumentParser()
    parser.add_argument("database", type=str, help="database")
    parser.add_argument("-d", "--display",
                        action="store_true",
                        help="display plots")
    parser.add_argument("-n", "--n_threads", type=int, help="number of threads")
    parser.add_argument("-o", "--output_dir", type=str, help="output directory")
    parser.add_argument("-s", "--subset", type=str, help="subset")
    return parser.parse_args()

def inputter(args):
    if args.output_dir and not os.path.exists(args.output_dir):
        os.mkdir(args.output_dir)
    db = Database(args.database)
    for origin in db.iterate_origins(subset=args.subset):
        yield origin

def plotter(origin, args):
    if args.output_dir:
        save = os.path.join(args.output_dir, str(origin.orid))
    else:
        save = False
    show = args.display if args.display else False
    origin.plot(save=save,
                show=show)

def dummy(obj):
    pass

def main():
    args = parse_args()
    extra_args = {"input_init_args": (args,),
                  "main_init_args": (args,)}
    config_params = {"n_threads": args.n_threads if args.n_threads else 1}
    mtp = MultiThreadProcess(inputter,
                             plotter,
                             dummy,
                             extra_args=extra_args,
                             config_params=config_params)
    mtp.start()

if __name__ == "__main__":
    main()
